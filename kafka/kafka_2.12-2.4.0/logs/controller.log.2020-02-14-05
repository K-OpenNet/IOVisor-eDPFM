[2020-02-17 02:01:41,896] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:01:41,897] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:01:41,897] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(packetmonitor2-0 -> Vector(2, 0, 1), xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), xdp_control-0 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), sample-0 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), xdpcontrol1-0 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:01:41,898] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:01:41,898] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:01:41,898] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:01:41,898] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:01:41,898] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:01:41,898] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:06:41,898] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:06:41,898] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:06:41,899] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(packetmonitor2-0 -> Vector(2, 0, 1), xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), xdp_control-0 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), sample-0 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), xdpcontrol1-0 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:06:41,899] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:06:41,899] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:06:41,899] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:06:41,899] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:06:41,899] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:06:41,899] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:11:41,899] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:11:41,899] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:11:41,900] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(packetmonitor2-0 -> Vector(2, 0, 1), xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), xdp_control-0 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), sample-0 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), xdpcontrol1-0 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:11:41,900] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:11:41,900] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:11:41,900] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:11:41,900] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:11:41,900] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:11:41,900] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:16:41,900] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:16:41,900] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:16:41,901] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(packetmonitor2-0 -> Vector(2, 0, 1), xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), xdp_control-0 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), sample-0 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), xdpcontrol1-0 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:16:41,901] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:16:41,901] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:16:41,901] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:16:41,901] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:16:41,901] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:16:41,901] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:18:53,621] INFO [Controller id=2] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-02-17 02:18:53,621] DEBUG [Controller id=2] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-02-17 02:18:53,621] DEBUG [Controller id=2] Live brokers: 1,2 (kafka.controller.KafkaController)
[2020-02-17 02:18:53,621] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:18:53,622] INFO [RequestSendThread controllerId=2] Controller 2 connected to bpf2:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-17 02:18:53,625] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:18:53,626] INFO [RequestSendThread controllerId=2] Controller 2 connected to bpf2:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-17 02:18:53,626] INFO [RequestSendThread controllerId=2] Controller 2 connected to bpf2:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-17 02:18:53,626] TRACE [Controller id=2] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),xdpcontrol1-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),packetmonitor-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),xdpptest-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),xdp_control-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),test-0 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:2),packetmonitor2-0 -> (Leader:2,ISR:2,1,LeaderEpoch:6,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),sample-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:2),xdpcontrol-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.KafkaController)
[2020-02-17 02:18:53,644] WARN [RequestSendThread controllerId=2] Controller 2 epoch 2 fails to send request (type=StopReplicaRequest, controllerId=2, controllerEpoch=2, deletePartitions=false, brokerEpoch=799, partitions=packetmonitor2-0) to broker bpf2:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:257)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:53,746] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:53,847] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:53,948] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:54,049] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:54,150] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:54,251] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:54,353] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:54,454] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:54,555] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker bpf2:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to bpf2:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:250)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-02-17 02:18:54,556] INFO [Controller id=2] Newly added brokers: , deleted brokers: 0, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2020-02-17 02:18:54,557] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-02-17 02:18:54,557] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-02-17 02:18:54,557] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-02-17 02:18:54,557] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-02-17 02:18:54,559] INFO [Controller id=2] Broker failure callback for 0 (kafka.controller.KafkaController)
[2020-02-17 02:18:54,559] INFO [Controller id=2] Removed 0 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-02-17 02:18:54,607] DEBUG [Controller id=2] Unregister BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-02-17 02:18:54,607] INFO [Controller id=2] Updated broker epochs cache: Map(1 -> 176, 2 -> 192) (kafka.controller.KafkaController)
[2020-02-17 02:19:02,640] INFO [Controller id=2] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-02-17 02:19:02,640] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-17 02:19:02,642] INFO [Controller id=2] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-02-17 02:19:02,642] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-02-17 02:19:02,644] INFO [RequestSendThread controllerId=2] Controller 2 connected to bpf2:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-17 02:19:02,682] DEBUG [Controller id=2] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-02-17 02:19:02,682] INFO [Controller id=2] Updated broker epochs cache: Map(1 -> 176, 2 -> 192, 0 -> 981) (kafka.controller.KafkaController)
[2020-02-17 02:19:05,709] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: Vector(1, 2, 0) for TopicPartitions: ArrayBuffer(packetmonitor2-0) (kafka.controller.KafkaController)
[2020-02-17 02:20:08,000] DEBUG [Controller id=2] Delete topics listener fired for topics sample to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:20:08,000] INFO [Controller id=2] Starting topic deletion for topics sample (kafka.controller.KafkaController)
[2020-02-17 02:20:08,001] INFO [Topic Deletion Manager 2] Handling deletion for topics sample (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,003] INFO [Topic Deletion Manager 2] Deletion of topic sample (re)started (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,003] INFO [Topic Deletion Manager 2] Topic deletion callback for sample (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,007] INFO [Topic Deletion Manager 2] Partition deletion callback for sample-0 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,013] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=sample,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:08,013] DEBUG [Topic Deletion Manager 2] Deletion started for replicas [Topic=sample,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,014] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=sample,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:08,037] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(sample-0 -> NONE) (kafka.controller.KafkaController)
[2020-02-17 02:20:08,038] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=sample,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,039] INFO [Topic Deletion Manager 2] Handling deletion for topics sample (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,049] INFO [Topic Deletion Manager 2] Deletion of topic sample successfully completed (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:08,049] INFO [Controller id=2] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-02-17 02:20:08,050] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:20:26,564] DEBUG [Controller id=2] Delete topics listener fired for topics test to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:20:26,564] INFO [Controller id=2] Starting topic deletion for topics test (kafka.controller.KafkaController)
[2020-02-17 02:20:26,564] INFO [Topic Deletion Manager 2] Handling deletion for topics test (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,564] INFO [Topic Deletion Manager 2] Deletion of topic test (re)started (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,564] INFO [Topic Deletion Manager 2] Topic deletion callback for test (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,565] INFO [Topic Deletion Manager 2] Partition deletion callback for test-0 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,567] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:26,567] DEBUG [Topic Deletion Manager 2] Deletion started for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,568] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:26,620] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test-0 -> NONE) (kafka.controller.KafkaController)
[2020-02-17 02:20:26,621] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,621] INFO [Topic Deletion Manager 2] Handling deletion for topics test (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,626] INFO [Topic Deletion Manager 2] Deletion of topic test successfully completed (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:26,627] INFO [Controller id=2] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-02-17 02:20:26,628] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:20:32,945] DEBUG [Controller id=2] Delete topics listener fired for topics xdp_control to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:20:32,945] INFO [Controller id=2] Starting topic deletion for topics xdp_control (kafka.controller.KafkaController)
[2020-02-17 02:20:32,945] INFO [Topic Deletion Manager 2] Handling deletion for topics xdp_control (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,945] INFO [Topic Deletion Manager 2] Deletion of topic xdp_control (re)started (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,945] INFO [Topic Deletion Manager 2] Topic deletion callback for xdp_control (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,946] INFO [Topic Deletion Manager 2] Partition deletion callback for xdp_control-0 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,949] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=xdp_control,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:32,949] DEBUG [Topic Deletion Manager 2] Deletion started for replicas [Topic=xdp_control,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,949] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=xdp_control,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:32,959] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(xdp_control-0 -> NONE) (kafka.controller.KafkaController)
[2020-02-17 02:20:32,959] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=xdp_control,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,960] INFO [Topic Deletion Manager 2] Handling deletion for topics xdp_control (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,967] INFO [Topic Deletion Manager 2] Deletion of topic xdp_control successfully completed (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:32,968] INFO [Controller id=2] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-02-17 02:20:32,968] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:20:58,593] DEBUG [Controller id=2] Delete topics listener fired for topics packetmonitor2 to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:20:58,593] INFO [Controller id=2] Starting topic deletion for topics packetmonitor2 (kafka.controller.KafkaController)
[2020-02-17 02:20:58,593] INFO [Topic Deletion Manager 2] Handling deletion for topics packetmonitor2 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,593] INFO [Topic Deletion Manager 2] Deletion of topic packetmonitor2 (re)started (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,593] INFO [Topic Deletion Manager 2] Topic deletion callback for packetmonitor2 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,594] INFO [Topic Deletion Manager 2] Partition deletion callback for packetmonitor2-0 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,600] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:58,600] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:58,601] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:58,601] DEBUG [Topic Deletion Manager 2] Deletion started for replicas [Topic=packetmonitor2,Partition=0,Replica=0],[Topic=packetmonitor2,Partition=0,Replica=2],[Topic=packetmonitor2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,601] DEBUG The stop replica request (delete = true) sent to broker 2 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=2],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:58,601] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:58,601] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=packetmonitor2,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:20:58,620] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(packetmonitor2-0 -> NONE) (kafka.controller.KafkaController)
[2020-02-17 02:20:58,620] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=packetmonitor2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,621] INFO [Topic Deletion Manager 2] Handling deletion for topics packetmonitor2 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,624] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(packetmonitor2-0 -> NONE) (kafka.controller.KafkaController)
[2020-02-17 02:20:58,624] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=packetmonitor2,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,624] INFO [Topic Deletion Manager 2] Handling deletion for topics packetmonitor2 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,627] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(packetmonitor2-0 -> NONE) (kafka.controller.KafkaController)
[2020-02-17 02:20:58,627] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=packetmonitor2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,627] INFO [Topic Deletion Manager 2] Handling deletion for topics packetmonitor2 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,632] INFO [Topic Deletion Manager 2] Deletion of topic packetmonitor2 successfully completed (kafka.controller.TopicDeletionManager)
[2020-02-17 02:20:58,633] INFO [Controller id=2] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-02-17 02:20:58,633] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:21:05,845] DEBUG [Controller id=2] Delete topics listener fired for topics xdpcontrol1 to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:21:05,845] INFO [Controller id=2] Starting topic deletion for topics xdpcontrol1 (kafka.controller.KafkaController)
[2020-02-17 02:21:05,845] INFO [Topic Deletion Manager 2] Handling deletion for topics xdpcontrol1 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,845] INFO [Topic Deletion Manager 2] Deletion of topic xdpcontrol1 (re)started (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,845] INFO [Topic Deletion Manager 2] Topic deletion callback for xdpcontrol1 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,846] INFO [Topic Deletion Manager 2] Partition deletion callback for xdpcontrol1-0 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,848] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=xdpcontrol1,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:21:05,848] DEBUG [Topic Deletion Manager 2] Deletion started for replicas [Topic=xdpcontrol1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,849] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=xdpcontrol1,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-17 02:21:05,857] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(xdpcontrol1-0 -> NONE) (kafka.controller.KafkaController)
[2020-02-17 02:21:05,857] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=xdpcontrol1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,857] INFO [Topic Deletion Manager 2] Handling deletion for topics xdpcontrol1 (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,864] INFO [Topic Deletion Manager 2] Deletion of topic xdpcontrol1 successfully completed (kafka.controller.TopicDeletionManager)
[2020-02-17 02:21:05,864] INFO [Controller id=2] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-02-17 02:21:05,865] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-02-17 02:21:41,901] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:21:41,901] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:21:41,902] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:21:41,902] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:21:41,902] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:21:41,902] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:21:41,902] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:21:41,902] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:21:41,903] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:26:41,903] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:26:41,903] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:26:41,904] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:26:41,904] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:26:41,904] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:26:41,904] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:26:41,904] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:26:41,904] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:26:41,904] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:31:41,904] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:31:41,904] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:31:41,905] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:31:41,905] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:31:41,905] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:31:41,905] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:31:41,905] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:31:41,905] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:31:41,905] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:36:41,905] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:36:41,905] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:36:41,906] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:36:41,906] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:36:41,906] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:36:41,906] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:36:41,906] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:36:41,906] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:36:41,906] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:41:41,906] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:41:41,906] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:41:41,907] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:41:41,907] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:41:41,907] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:41:41,907] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:41:41,907] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:41:41,907] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:41:41,907] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:46:41,907] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:46:41,907] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:46:41,908] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:46:41,908] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:46:41,908] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:46:41,908] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:46:41,908] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:46:41,908] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:46:41,908] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:51:41,908] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:51:41,909] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:56:41,910] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-17 02:56:41,910] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-17 02:56:41,911] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(xdpcontrol-0 -> Vector(2)), 1 -> Map(xdpptest-0 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), packetmonitor-0 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-17 02:56:41,911] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-17 02:56:41,911] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:56:41,911] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-17 02:56:41,911] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-17 02:56:41,911] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-17 02:56:41,911] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
